!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/k4s3ki/42_common_core/cub3d/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(NAME)	Makefile	/^$(NAME): lib $(OBJ) todo$/;"	t
$(NAME)	lib/Printf/Makefile	/^$(NAME) : $(OBJ)$/;"	t
$(NAME)	lib/get_next_line/Makefile	/^$(NAME) : $(OBJ)$/;"	t
$(NAME)	lib/libft/Makefile	/^$(NAME): $(OBJS)$/;"	t
$(NAME)	mlx/Makefile.mk	/^$(NAME)	: $(OBJ)$/;"	t
$(NAME)	mlx/test/Makefile.mk	/^$(NAME): $(OBJ)$/;"	t
$(OBJDIR)	Makefile	/^$(OBJDIR):$/;"	t
$(OBJDIR)/%.o	Makefile	/^$(OBJDIR)\/%.o: %.c | $(OBJDIR)$/;"	t
$(OBJ_DIR)/%.o	mlx/Makefile.mk	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
%.c%.o	lib/libft/Makefile	/^%.c%.o: $(SRCS)$/;"	t
%.o	lib/Printf/Makefile	/^%.o : %.c$/;"	t
%.o	lib/get_next_line/Makefile	/^%.o : %.c$/;"	t
AR	lib/Printf/Makefile	/^AR = ar rcs$/;"	m
AR	lib/get_next_line/Makefile	/^AR = ar rcs$/;"	m
AR	lib/libft/Makefile	/^AR = ar -r$/;"	m
AUTHOR	mlx/man/man1/mlx.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_loop.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_new_image.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_new_window.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man1/mlx_pixel_put.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_loop.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_new_image.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_new_window.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlx/man/man3/mlx_pixel_put.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
B	includes/cub3d.h	/^# define B /;"	d
BACKWARD	includes/cub3d.h	/^# define BACKWARD /;"	d
BUFFER_SIZE	lib/get_next_line/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
C	includes/cub3d.h	/^# define C /;"	d
CC	Makefile	/^CC			=	cc$/;"	m
CC	lib/Printf/Makefile	/^CC = cc$/;"	m
CC	lib/get_next_line/Makefile	/^CC = cc$/;"	m
CC	lib/libft/Makefile	/^CC = cc$/;"	m
CC	mlx/Makefile.mk	/^	CC = clang$/;"	m
CC	mlx/Makefile.mk	/^CC	= gcc$/;"	m
CC	mlx/test/Makefile.mk	/^	CC	= gcc$/;"	m
CC	mlx/test/Makefile.mk	/^	CC = clang$/;"	m
CFLAGS	Makefile	/^CFLAGS		=	-Wall -Werror -Wextra -I$(INCDIR)\\$/;"	m
CFLAGS	lib/Printf/Makefile	/^CFLAGS = -Wall -Werror -Wextra$/;"	m
CFLAGS	lib/get_next_line/Makefile	/^CFLAGS = -Wall -Werror -Wextra -g$/;"	m
CFLAGS	lib/libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	mlx/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	mlx/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I.. -g$/;"	m
COLOR	mlx/man/man1/mlx_pixel_put.1	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
COLOR	mlx/man/man3/mlx_pixel_put.3	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
CUB3D_H	includes/cub3d.h	/^# define CUB3D_H$/;"	d
DESCRIPTION	mlx/man/man1/mlx.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_loop.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_new_image.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_new_window.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man1/mlx_pixel_put.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_loop.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_new_image.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_new_window.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlx/man/man3/mlx_pixel_put.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DOWN_LINE	Makefile	/^DOWN_LINE = "└───────────────────────────/;"	m
EELT	includes/cub3d.h	/^# define EELT	/;"	d
EEXTRACT	includes/cub3d.h	/^# define EEXTRACT	/;"	d
EMPTY_MAP	includes/cub3d.h	/^# define EMPTY_MAP	/;"	d
EMPTY_MAP_FILE	includes/cub3d.h	/^# define EMPTY_MAP_FILE	/;"	d
ENV_DISPLAY	mlx/mlx_int.h	/^# define ENV_DISPLAY /;"	d
EOF	mlx/configure	/^cat <<EOF$/;"	h
ERROR	includes/cub3d.h	/^# define ERROR	/;"	d
ERROR_MALLOC	includes/cub3d.h	/^# define ERROR_MALLOC	/;"	d
ERROR_OPEN	includes/cub3d.h	/^# define ERROR_OPEN	/;"	d
ERR_NO_TRUECOLOR	mlx/mlx_int.h	/^# define ERR_NO_TRUECOLOR /;"	d
FILES	lib/libft/Makefile	/^FILES = ft_memset \\$/;"	m
FILES_B	lib/libft/Makefile	/^FILES_B = 	ft_lstnew \\$/;"	m
FORCE	Makefile	/^FORCE:$/;"	t
FORWARD	includes/cub3d.h	/^# define FORWARD /;"	d
FT_PRINTF_H	lib/Printf/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
G	Makefile	/^G = \\033[32m$/;"	m
G	includes/cub3d.h	/^# define G /;"	d
GET_NEXT_LINE_H	lib/get_next_line/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GOING	mlx/man/man1/mlx_loop.1	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GOING	mlx/man/man3/mlx_loop.3	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
IM1_SX	mlx/test/main.c	/^#define	IM1_SX	/;"	d	file:
IM1_SY	mlx/test/main.c	/^#define	IM1_SY	/;"	d	file:
IM3_SX	mlx/test/main.c	/^#define	IM3_SX	/;"	d	file:
IM3_SY	mlx/test/main.c	/^#define	IM3_SY	/;"	d	file:
INC	mlx/Makefile.mk	/^INC	=%%%%$/;"	m
INC	mlx/test/Makefile.mk	/^INC=%%%%$/;"	m
INCDIR	Makefile	/^INCDIR = includes$/;"	m
INCLIB	mlx/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
INCLUDE	mlx/man/man1/mlx.1	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCLUDE	mlx/man/man3/mlx.3	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INVALID_BORDERS	includes/cub3d.h	/^# define INVALID_BORDERS	/;"	d
INVALID_ELT_ID	includes/cub3d.h	/^# define INVALID_ELT_ID	/;"	d
INVALID_VALUES	includes/cub3d.h	/^# define INVALID_VALUES	/;"	d
LEFT	includes/cub3d.h	/^# define LEFT /;"	d
LFLAGS	mlx/test/Makefile.mk	/^LFLAGS = -L.. -lmlx -L$(INCLIB) -lXext -lX11 -lm$/;"	m
LIB	Makefile	/^LIB = lib\/libft\/libft.a lib\/get_next_line\/lib_get_next_line.a$/;"	m
LIBFT_H	lib/libft/libft.h	/^# define LIBFT_H$/;"	d
LIBRARY	mlx/man/man1/mlx.1	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIBRARY	mlx/man/man3/mlx.3	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LINKING	mlx/man/man1/mlx.1	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LINKING	mlx/man/man3/mlx.3	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LOCALHOST	mlx/mlx_int.h	/^# define LOCALHOST /;"	d
L_ARROW	Makefile	/^L_ARROW   = ❯$/;"	m
M	includes/cub3d.h	/^# define M /;"	d
MLX_FAIL	includes/cub3d.h	/^# define MLX_FAIL	/;"	d
MLX_FLAGS	Makefile	/^MLX_FLAGS	=	-lX11 -lXext$/;"	m
MLX_H	mlx/mlx.h	/^#define	MLX_H$/;"	d
MLX_IMG_FAIL	includes/cub3d.h	/^# define MLX_IMG_FAIL	/;"	d
MLX_INT_H	mlx/mlx_int.h	/^# define MLX_INT_H$/;"	d
MLX_MAX_EVENT	mlx/mlx_int.h	/^# define MLX_MAX_EVENT /;"	d
MLX_TYPE_SHM	mlx/mlx_int.h	/^# define MLX_TYPE_SHM /;"	d
MLX_TYPE_SHM_PIXMAP	mlx/mlx_int.h	/^# define MLX_TYPE_SHM_PIXMAP /;"	d
MLX_TYPE_XIMAGE	mlx/mlx_int.h	/^# define MLX_TYPE_XIMAGE /;"	d
MULTIPLE_START	includes/cub3d.h	/^# define MULTIPLE_START	/;"	d
MiniLibX	mlx/man/man1/mlx.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_loop.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_new_image.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_new_window.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man1/mlx_pixel_put.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_loop.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_new_image.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_new_window.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlx/man/man3/mlx_pixel_put.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
NAME	Makefile	/^NAME = cub3d$/;"	m
NAME	lib/Printf/Makefile	/^NAME = libftprintf.a$/;"	m
NAME	lib/get_next_line/Makefile	/^NAME = lib_get_next_line.a$/;"	m
NAME	lib/libft/Makefile	/^NAME = libft.a$/;"	m
NAME	mlx/Makefile.mk	/^NAME		= libmlx.a$/;"	m
NAME	mlx/man/man1/mlx.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_loop.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_new_image.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_new_window.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man1/mlx_pixel_put.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_loop.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_new_image.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_new_window.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/man/man3/mlx_pixel_put.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlx/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME_UNAME	mlx/Makefile.mk	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
OBJ	Makefile	/^OBJ = $(patsubst %.c, $(OBJDIR)\/%.o, $(SRC))$/;"	m
OBJ	lib/Printf/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/get_next_line/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	mlx/Makefile.mk	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	mlx/test/Makefile.mk	/^OBJ = $(SRC:%.c=%.o)$/;"	m
OBJDIR	Makefile	/^OBJDIR = obj$/;"	m
OBJS	lib/libft/Makefile	/^OBJS = $(addprefix $(OBJS_DIR), $(addsuffix .o, $(FILES)))$/;"	m
OBJS_B	lib/libft/Makefile	/^OBJS_B = $(addprefix $(OBJS_DIR), $(addsuffix .o, $(FILES_B)))$/;"	m
OBJS_DIR	lib/libft/Makefile	/^OBJS_DIR = .\/$/;"	m
OBJ_DIR	mlx/Makefile.mk	/^OBJ_DIR = obj$/;"	m
PASTEL_BLUE	includes/cub3d.h	/^# define PASTEL_BLUE /;"	d
PASTEL_BROWN	includes/cub3d.h	/^# define PASTEL_BROWN /;"	d
PASTEL_GREEN	includes/cub3d.h	/^# define PASTEL_GREEN /;"	d
PASTEL_ORANGE	includes/cub3d.h	/^# define PASTEL_ORANGE /;"	d
PASTEL_PINK	includes/cub3d.h	/^# define PASTEL_PINK /;"	d
PASTEL_YELLOW	includes/cub3d.h	/^# define PASTEL_YELLOW /;"	d
R	includes/cub3d.h	/^# define R /;"	d
RETURN	mlx/man/man1/mlx.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man1/mlx_new_image.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man1/mlx_new_window.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man3/mlx.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man3/mlx_new_image.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/man/man3/mlx_new_window.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlx/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RIGHT	includes/cub3d.h	/^# define RIGHT /;"	d
RM	lib/Printf/Makefile	/^RM = rm -f$/;"	m
RM	lib/get_next_line/Makefile	/^RM = rm -f$/;"	m
RM	lib/libft/Makefile	/^RM = rm -f$/;"	m
RST	Makefile	/^RST = \\033[0m$/;"	m
RST	includes/cub3d.h	/^# define RST /;"	d
SC_HEI	includes/cub3d.h	/^# define SC_HEI /;"	d
SC_WID	includes/cub3d.h	/^# define SC_WID /;"	d
SEE	mlx/man/man1/mlx.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_loop.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_new_image.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_new_window.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man1/mlx_pixel_put.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_loop.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_new_image.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_new_window.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlx/man/man3/mlx_pixel_put.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SIDE_L	Makefile	/^SIDE_L    = │$/;"	m
SRC	Makefile	/^SRC = $(SRC_MAIN) $(SRC_PARSING) $(SRC_FREE) $(SRC_MLX_INIT) $(SRC_RAYCAST)$/;"	m
SRC	lib/Printf/Makefile	/^SRC =  ft_printf.c \\$/;"	m
SRC	lib/get_next_line/Makefile	/^SRC =  get_next_line.c \\$/;"	m
SRC	mlx/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	mlx/test/Makefile.mk	/^SRC = main.c$/;"	m
SRCS	lib/libft/Makefile	/^SRCS = $(addprefix $(SRCS_DIR), $(addsuffix .c, $(FILES)))$/;"	m
SRCS_B	lib/libft/Makefile	/^SRCS_B = $(addprefix $(SRCS_DIR), $(addsuffix .c, $(FILES_B)))$/;"	m
SRCS_DIR	lib/libft/Makefile	/^SRCS_DIR = .\/$/;"	m
SRC_FREE	Makefile	/^SRC_FREE =		src\/free\/ft_free.c $/;"	m
SRC_MAIN	Makefile	/^SRC_MAIN = 		src\/main.c$/;"	m
SRC_MLX_INIT	Makefile	/^SRC_MLX_INIT = 	src\/init_window\/init_window.c$/;"	m
SRC_PARSING	Makefile	/^SRC_PARSING =	src\/parsing\/parse.c \\$/;"	m
SRC_RAYCAST	Makefile	/^SRC_RAYCAST = 	src\/key_hook\/key_hook.c \\$/;"	m
STORING	mlx/man/man1/mlx_new_image.1	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
STORING	mlx/man/man3/mlx_new_image.3	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_loop.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_new_image.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_new_window.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man1/mlx_pixel_put.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_loop.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_new_image.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_new_window.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlx/man/man3/mlx_pixel_put.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
UNAME	mlx/Makefile.mk	/^UNAME = $(shell uname)$/;"	m
UNAME	mlx/test/Makefile.mk	/^UNAME := $(shell uname)$/;"	m
UP_LINE	Makefile	/^UP_LINE   = "┌───────────────────────────/;"	m
W	includes/cub3d.h	/^# define W /;"	d
WARN_SHM_ATTACH	mlx/mlx_int.h	/^# define WARN_SHM_ATTACH /;"	d
WIN1_SX	mlx/test/main.c	/^#define	WIN1_SX	/;"	d	file:
WIN1_SY	mlx/test/main.c	/^#define	WIN1_SY	/;"	d	file:
WRONG_IDENTIFIER	includes/cub3d.h	/^# define WRONG_IDENTIFIER	/;"	d
WRONG_MAP_EXT	includes/cub3d.h	/^# define WRONG_MAP_EXT	/;"	d
WRONG_NUMBER_ARG	includes/cub3d.h	/^# define WRONG_NUMBER_ARG	/;"	d
X-WINDOW	mlx/man/man1/mlx.1	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	mlx/man/man1/mlx_loop.1	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
X-WINDOW	mlx/man/man3/mlx.3	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	mlx/man/man3/mlx_loop.3	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
XPM	mlx/man/man1/mlx_new_image.1	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
XPM	mlx/man/man3/mlx_new_image.3	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
X_ShmAttach	mlx/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
Y	includes/cub3d.h	/^# define Y /;"	d
addr	includes/cub3d.h	/^	void	*addr;$/;"	m	struct:s_sprite	typeref:typename:void *
all	Makefile	/^all:$/;"	t
all	lib/Printf/Makefile	/^all : $(NAME)$/;"	t
all	lib/get_next_line/Makefile	/^all : $(NAME)$/;"	t
all	lib/libft/Makefile	/^all: $(NAME)$/;"	t
all	mlx/Makefile	/^all	: do_configure$/;"	t
all	mlx/Makefile.mk	/^all	: $(NAME)$/;"	t
all	mlx/test/Makefile.mk	/^all: $(NAME)$/;"	t
array_create	lib/libft/ft_split.c	/^char	**array_create(char const *s, char c, char **str)$/;"	f	typeref:typename:char **
at_exit	mlx/test/run_tests.sh	/^at_exit() {$/;"	f
bonus	lib/libft/Makefile	/^bonus: $(OBJS_B)$/;"	t
bpp	includes/cub3d.h	/^	int		bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp	mlx/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp1	mlx/test/main.c	/^int	bpp1;$/;"	v	typeref:typename:int
bpp2	mlx/test/main.c	/^int	bpp2;$/;"	v	typeref:typename:int
bpp3	mlx/test/main.c	/^int	bpp3;$/;"	v	typeref:typename:int
bpp4	mlx/test/main.c	/^int	bpp4;$/;"	v	typeref:typename:int
c	includes/cub3d.h	/^	int		c[3];$/;"	m	struct:s_data	typeref:typename:int[3]
ceiling	includes/cub3d.h	/^	int		ceiling;$/;"	m	struct:s_data	typeref:typename:int
check	mlx/Makefile.mk	/^check: all$/;"	t
check_and_get_elts	src/parsing/map_reader.c	/^char	*check_and_get_elts(int fd)$/;"	f	typeref:typename:char *
check_around	src/parsing/check_map.c	/^bool	check_around(char **map, int i, int j)$/;"	f	typeref:typename:bool
check_borders	src/parsing/check_map.c	/^bool	check_borders(char **map, t_data *data)$/;"	f	typeref:typename:bool
check_dir	src/key_hook/key_hook.c	/^bool	check_dir(t_data *data, int dir)$/;"	f	typeref:typename:bool
check_map	src/parsing/check_map.c	/^bool	check_map(t_data *data)$/;"	f	typeref:typename:bool
check_map_format	src/parsing/map_reader.c	/^bool	check_map_format(char *map_file)$/;"	f	typeref:typename:bool
check_split_map	src/parsing/parsing_utils.c	/^bool	check_split_map(char **map)$/;"	f	typeref:typename:bool
check_values	src/parsing/check_map.c	/^bool	check_values(char **map, t_data *data)$/;"	f	typeref:typename:bool
checker_c	includes/cub3d.h	/^	bool	checker_c;$/;"	m	struct:s_data	typeref:typename:bool
checker_f	includes/cub3d.h	/^	bool	checker_f;$/;"	m	struct:s_data	typeref:typename:bool
clean	Makefile	/^clean:$/;"	t
clean	lib/Printf/Makefile	/^clean :$/;"	t
clean	lib/get_next_line/Makefile	/^clean : $/;"	t
clean	lib/libft/Makefile	/^clean:$/;"	t
clean	mlx/Makefile	/^clean	:$/;"	t
clean	mlx/Makefile.mk	/^clean	:$/;"	t
clean	mlx/configure	/^clean(){$/;"	f
clean	mlx/test/Makefile.mk	/^clean:$/;"	t
close_mlx	src/free/ft_free.c	/^int	close_mlx(t_data *data)$/;"	f	typeref:typename:int
close_mlx_error	src/free/ft_free.c	/^int	close_mlx_error(t_data *data)$/;"	f	typeref:typename:int
cmap	mlx/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar	typeref:typename:Colormap
col	mlx/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col	typeref:typename:int
color	mlx/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name	typeref:typename:int
color_map_1	mlx/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f	typeref:typename:int
color_map_2	mlx/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f	typeref:typename:int
content	lib/libft/libft.h	/^	void			*content;$/;"	m	struct:s_list	typeref:typename:void *
count_words	lib/libft/ft_split.c	/^int	count_words(char const *s, char c)$/;"	f	typeref:typename:int
data	mlx/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img	typeref:typename:char *
data1	mlx/test/main.c	/^char	*data1;$/;"	v	typeref:typename:char *
data2	mlx/test/main.c	/^char	*data2;$/;"	v	typeref:typename:char *
data3	mlx/test/main.c	/^char	*data3;$/;"	v	typeref:typename:char *
data4	mlx/test/main.c	/^char	*data4;$/;"	v	typeref:typename:char *
decrgb	mlx/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar	typeref:typename:int[6]
depth	mlx/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar	typeref:typename:int
display	mlx/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar	typeref:typename:Display *
do_configure	mlx/Makefile	/^do_configure	:$/;"	t
do_flush	mlx/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar	typeref:typename:int
ea	includes/cub3d.h	/^	t_img	ea;$/;"	m	struct:s_data	typeref:typename:t_img
end_loop	mlx/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar	typeref:typename:int
endian	includes/cub3d.h	/^	int		endian;$/;"	m	struct:s_img	typeref:typename:int
endian1	mlx/test/main.c	/^int	endian1;$/;"	v	typeref:typename:int
endian2	mlx/test/main.c	/^int	endian2;$/;"	v	typeref:typename:int
endian3	mlx/test/main.c	/^int	endian3;$/;"	v	typeref:typename:int
endian4	mlx/test/main.c	/^int	endian4;$/;"	v	typeref:typename:int
expose_hook	mlx/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
expose_param	mlx/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list	typeref:typename:void *
expose_win1	mlx/test/main.c	/^int	expose_win1(void *p)$/;"	f	typeref:typename:int
expose_win2	mlx/test/main.c	/^int	expose_win2(void *p)$/;"	f	typeref:typename:int
extract_elements	src/parsing/map_reader.c	/^char	*extract_elements(int fd)$/;"	f	typeref:typename:char *
extract_map	src/parsing/map_reader.c	/^char	*extract_map(int fd)$/;"	f	typeref:typename:char *
f	includes/cub3d.h	/^	int		f[3];$/;"	m	struct:s_data	typeref:typename:int[3]
fclean	Makefile	/^fclean: clean$/;"	t
fclean	lib/Printf/Makefile	/^fclean : clean$/;"	t
fclean	lib/get_next_line/Makefile	/^fclean : clean$/;"	t
fclean	lib/libft/Makefile	/^fclean: clean$/;"	t
fill_data	src/parsing/fill_data.c	/^bool	fill_data(char *map_content, t_data *data)$/;"	f	typeref:typename:bool
fill_identifiers	src/parsing/fill_data.c	/^bool	fill_identifiers(char *map_content, t_data *data)$/;"	f	typeref:typename:bool
fill_keywords	src/parsing/parsing_utils.c	/^void	fill_keywords(char **map, t_data *data)$/;"	f	typeref:typename:void
fill_map	src/parsing/fill_data.c	/^bool	fill_map(char *map_content, t_data *data)$/;"	f	typeref:typename:bool
fill_rgb	src/parsing/fill_data.c	/^bool	fill_rgb(char *line, int *array)$/;"	f	typeref:typename:bool
find_str	src/parsing/parsing_utils.c	/^bool	find_str(const char *big, const char *little)$/;"	f	typeref:typename:bool
floor	includes/cub3d.h	/^	int		floor;$/;"	m	struct:s_data	typeref:typename:int
format	mlx/mlx_int.h	/^	int				format;$/;"	m	struct:s_img	typeref:typename:int
free_data	src/free/ft_free.c	/^void	free_data(t_data *data)$/;"	f	typeref:typename:void
free_tab	src/free/ft_free.c	/^void	free_tab(void **tab)$/;"	f	typeref:typename:void
ft_abs	lib/libft/ft_strtrim.c	/^int	ft_abs(int i, int j)$/;"	f	typeref:typename:int
ft_atoi	lib/libft/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	f	typeref:typename:int
ft_bzero	lib/libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_calloc	lib/libft/ft_calloc.c	/^void	*ft_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_calloc_gnl	lib/get_next_line/get_next_line_utils.c	/^void	*ft_calloc_gnl(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ft_checkformat	lib/Printf/ft_printf.c	/^static int	ft_checkformat(int i, const char *format, va_list args)$/;"	f	typeref:typename:int	file:
ft_create_line	lib/get_next_line/get_next_line.c	/^char	*ft_create_line(char **stash, ssize_t l)$/;"	f	typeref:typename:char *
ft_free	lib/libft/ft_split.c	/^char	**ft_free(char **str, int j)$/;"	f	typeref:typename:char **
ft_isalnum	lib/libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f	typeref:typename:int
ft_isalpha	lib/libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f	typeref:typename:int
ft_isascii	lib/libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f	typeref:typename:int
ft_isdigit	lib/libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isprint	lib/libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f	typeref:typename:int
ft_itoa	lib/libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_length_nbr	lib/Printf/ft_putlow_hexa.c	/^static int	ft_length_nbr(unsigned long int nbr)$/;"	f	typeref:typename:int	file:
ft_length_nbr	lib/Printf/ft_putnbr_fd_print.c	/^static int	ft_length_nbr(long nbr)$/;"	f	typeref:typename:int	file:
ft_length_nbr	lib/Printf/ft_putupp_hexa.c	/^static int	ft_length_nbr(unsigned long int nbr)$/;"	f	typeref:typename:int	file:
ft_length_ptr	lib/Printf/ft_putptr.c	/^static int	ft_length_ptr(unsigned long int nbr)$/;"	f	typeref:typename:int	file:
ft_length_unbr	lib/Printf/ft_putunbr_fd_print.c	/^static int	ft_length_unbr(unsigned long int nbr)$/;"	f	typeref:typename:int	file:
ft_lstadd_back	lib/libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstadd_front	lib/libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f	typeref:typename:void
ft_lstclear	lib/libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f	typeref:typename:void
ft_lstdelone	lib/libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f	typeref:typename:void
ft_lstiter	lib/libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f	typeref:typename:void
ft_lstlast	lib/libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f	typeref:typename:t_list *
ft_lstmap	lib/libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f	typeref:typename:t_list *
ft_lstnew	lib/libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f	typeref:typename:t_list *
ft_lstsize	lib/libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f	typeref:typename:int
ft_memchr	lib/libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	lib/libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	lib/libft/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	lib/libft/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	lib/libft/ft_memset.c	/^void	*ft_memset(void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_new	lib/libft/ft_itoa.c	/^unsigned int	ft_new(int n)$/;"	f	typeref:typename:unsigned int
ft_new_stash	lib/get_next_line/get_next_line.c	/^char	*ft_new_stash(char **stash)$/;"	f	typeref:typename:char *
ft_printf	lib/Printf/ft_printf.c	/^int	ft_printf(const char *format, ...)$/;"	f	typeref:typename:int
ft_putchar_fd	lib/libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putchar_fd_print	lib/Printf/ft_putchar_fd_print.c	/^int	ft_putchar_fd_print(int c, int fd)$/;"	f	typeref:typename:int
ft_putchar_nbr_fd	lib/Printf/ft_putunbr_fd_print.c	/^static void	ft_putchar_nbr_fd(char c, int fd)$/;"	f	typeref:typename:void	file:
ft_putendl_fd	lib/libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_puthexa	lib/Printf/ft_putptr.c	/^static int	ft_puthexa(unsigned long int nbr)$/;"	f	typeref:typename:int	file:
ft_putlow_hexa	lib/Printf/ft_putlow_hexa.c	/^int	ft_putlow_hexa(unsigned int nbr)$/;"	f	typeref:typename:int
ft_putnbr_fd	lib/libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd_print	lib/Printf/ft_putnbr_fd_print.c	/^int	ft_putnbr_fd_print(int nb, int fd)$/;"	f	typeref:typename:int
ft_putptr	lib/Printf/ft_putptr.c	/^int	ft_putptr(void *ptr)$/;"	f	typeref:typename:int
ft_putstr_fd	lib/libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putstr_fd_print	lib/Printf/ft_putstr_fd_print.c	/^int	ft_putstr_fd_print(char *str, int fd)$/;"	f	typeref:typename:int
ft_putunbr_fd_print	lib/Printf/ft_putunbr_fd_print.c	/^int	ft_putunbr_fd_print(unsigned int nb, int fd)$/;"	f	typeref:typename:int
ft_putupp_hexa	lib/Printf/ft_putupp_hexa.c	/^int	ft_putupp_hexa(unsigned int nbr)$/;"	f	typeref:typename:int
ft_read_and_stash	lib/get_next_line/get_next_line.c	/^char	*ft_read_and_stash(int fd, char *stash, char *buf, ssize_t read_size)$/;"	f	typeref:typename:char *
ft_size	lib/libft/ft_itoa.c	/^int	ft_size(int n)$/;"	f	typeref:typename:int
ft_split	lib/libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	lib/libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strchr_gnl	lib/get_next_line/get_next_line_utils.c	/^int	ft_strchr_gnl(const char *s, int c)$/;"	f	typeref:typename:int
ft_strcmp	src/parsing/map_reader.c	/^int	ft_strcmp(const char *s1, const char *s2)$/;"	f	typeref:typename:int
ft_strdup	lib/libft/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	typeref:typename:char *
ft_striteri	lib/libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f	typeref:typename:void
ft_strjoin	lib/libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f	typeref:typename:char *
ft_strjoin_gnl	lib/get_next_line/get_next_line_utils.c	/^char	*ft_strjoin_gnl(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strlcat	lib/libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	lib/libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	lib/libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f	typeref:typename:size_t
ft_strlen_gnl	lib/get_next_line/get_next_line_utils.c	/^ssize_t	ft_strlen_gnl(char *str)$/;"	f	typeref:typename:ssize_t
ft_strlength	lib/Printf/ft_putstr_fd_print.c	/^static int	ft_strlength(char *s)$/;"	f	typeref:typename:int	file:
ft_strmapi	lib/libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	lib/libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strnstr	lib/libft/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	lib/libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strtrim	lib/libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f	typeref:typename:char *
ft_substr	lib/libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_temp	lib/get_next_line/get_next_line.c	/^char	*ft_temp(char **stash)$/;"	f	typeref:typename:char *
ft_temp_size_gnl	lib/get_next_line/get_next_line_utils.c	/^ssize_t	ft_temp_size_gnl(char *stash)$/;"	f	typeref:typename:ssize_t
ft_tolower	lib/libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	lib/libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
gc	mlx/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list	typeref:typename:GC
gc	mlx/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img	typeref:typename:GC
gere_mouse	mlx/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f	typeref:typename:int
get_clean_path	src/parsing/parsing_utils.c	/^char	*get_clean_path(char *messy_path)$/;"	f	typeref:typename:char *
get_color	src/print/print_face.c	/^unsigned int	get_color(int x, int y, t_img img)$/;"	f	typeref:typename:unsigned int
get_elements	src/parsing/map_reader.c	/^char	*get_elements(int fd)$/;"	f	typeref:typename:char *
get_file_content	src/parsing/map_reader.c	/^char	*get_file_content(int fd)$/;"	f	typeref:typename:char *
get_map	src/parsing/map_reader.c	/^char	*get_map(int fd)$/;"	f	typeref:typename:char *
get_next_line	lib/get_next_line/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_xlib_include_path	mlx/configure	/^get_xlib_include_path(){$/;"	f
gnl_no_newline	src/parsing/map_reader.c	/^char	*gnl_no_newline(int fd)$/;"	f	typeref:typename:char *
height	includes/cub3d.h	/^	int		height;$/;"	m	struct:s_data	typeref:typename:int
height	mlx/mlx_int.h	/^	int				height;$/;"	m	struct:s_img	typeref:typename:int
hook	mlx/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list	typeref:typename:int (*)()
hooks	mlx/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list	typeref:typename:t_event_list[]
i	includes/cub3d.h	/^	int		i;$/;"	m	struct:s_ray	typeref:typename:int
ignore_nl_from_bottom_and_find_str	src/parsing/map_reader.c	/^bool	ignore_nl_from_bottom_and_find_str(char *big, char *little)$/;"	f	typeref:typename:bool
im1	mlx/test/main.c	/^void    *im1;$/;"	v	typeref:typename:void *
im2	mlx/test/main.c	/^void	*im2;$/;"	v	typeref:typename:void *
im3	mlx/test/main.c	/^void	*im3;$/;"	v	typeref:typename:void *
im4	mlx/test/main.c	/^void	*im4;$/;"	v	typeref:typename:void *
image	mlx/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img	typeref:typename:XImage *
img	includes/cub3d.h	/^	t_img	img;$/;"	m	struct:s_data	typeref:typename:t_img
img	includes/cub3d.h	/^	void	*img;$/;"	m	struct:s_img	typeref:typename:void *
img_pix	includes/cub3d.h	/^	char	*img_pix;$/;"	m	struct:s_img	typeref:typename:char *
in_set	lib/libft/ft_strtrim.c	/^int	in_set(const char *set, char c)$/;"	f	typeref:typename:int
init_img	src/init_window/init_window.c	/^void	init_img(t_data *data)$/;"	f	typeref:typename:void
init_player	src/parsing/check_map.c	/^void	init_player(t_data *data, int i, int j)$/;"	f	typeref:typename:void
init_texture	src/init_window/init_window.c	/^void	init_texture(t_data *data)$/;"	f	typeref:typename:void
init_window	src/init_window/init_window.c	/^bool	init_window(t_data *data)$/;"	f	typeref:typename:bool
key_hook	mlx/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
key_hook	src/key_hook/key_hook.c	/^int	key_hook(int keycode, t_data *data)$/;"	f	typeref:typename:int
key_param	mlx/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list	typeref:typename:void *
key_win1	mlx/test/main.c	/^int	key_win1(int key,void *p)$/;"	f	typeref:typename:int
key_win2	mlx/test/main.c	/^int	key_win2(int key,void *p)$/;"	f	typeref:typename:int
key_win3	mlx/test/main.c	/^int	key_win3(int key,void *p)$/;"	f	typeref:typename:int
lib	Makefile	/^lib: FORCE$/;"	t
local_endian	mlx/test/main.c	/^int	local_endian;$/;"	v	typeref:typename:int
log_error	mlx/configure	/^log_error(){$/;"	f
log_error	mlx/test/run_tests.sh	/^log_error(){$/;"	f
log_info	mlx/configure	/^log_info(){$/;"	f
log_info	mlx/test/run_tests.sh	/^log_info(){$/;"	f
logging	mlx/configure	/^logging(){$/;"	f
logging	mlx/test/run_tests.sh	/^logging(){$/;"	f
loop_hook	mlx/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar	typeref:typename:int (*)()
loop_param	mlx/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar	typeref:typename:void *
main	mlx/configure	/^main(){$/;"	f
main	mlx/test/main.c	/^int	main()$/;"	f	typeref:typename:int
main	mlx/test/new_win.c	/^int main()$/;"	f	typeref:typename:int
main	mlx/test/run_tests.sh	/^main(){$/;"	f
main	src/main.c	/^int	main(int ac, char **av)$/;"	f	typeref:typename:int
map	includes/cub3d.h	/^	char	**map;$/;"	m	struct:s_data	typeref:typename:char **
map_size	includes/cub3d.h	/^	t_coo	map_size;$/;"	m	struct:s_data	typeref:typename:t_coo
mask	mlx/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list	typeref:typename:int
mlx	includes/cub3d.h	/^	void	*mlx;$/;"	m	struct:s_data	typeref:typename:void *
mlx	mlx/test/main.c	/^void	*mlx;$/;"	v	typeref:typename:void *
mlx	mlx/test/new_win.c	/^void *mlx;$/;"	v	typeref:typename:void *
mlx_X_error	mlx/mlx_new_image.c	/^int	mlx_X_error;$/;"	v	typeref:typename:int
mlx_clear_window	mlx/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_col_name	mlx/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_destroy_display	mlx/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_destroy_image	mlx/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f	typeref:typename:int
mlx_destroy_window	mlx/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_do_key_autorepeatoff	mlx/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeaton	mlx/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_sync	mlx/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_expose_hook	mlx/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_ext_fullscreen	mlx/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f	typeref:typename:int
mlx_flush_event	mlx/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_get_color_value	mlx/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_get_data_addr	mlx/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f	typeref:typename:char *
mlx_get_screen_size	mlx/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f	typeref:typename:int
mlx_hook	mlx/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f	typeref:typename:int
mlx_init	mlx/mlx_init.c	/^void	*mlx_init()$/;"	f	typeref:typename:void *
mlx_int_anti_resize_win	mlx/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f	typeref:typename:int
mlx_int_deal_shm	mlx/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_do_nothing	mlx/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f	typeref:typename:int
mlx_int_egal_img	mlx/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	mlx/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:int
mlx_int_get_col_name	mlx/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_good_color	mlx/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_int_get_line	mlx/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_text_rgb	mlx/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_visual	mlx/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_new_image	mlx/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f	typeref:typename:void *
mlx_int_new_xshm_image	mlx/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f	typeref:typename:void *
mlx_int_param_ButtonPress	mlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_ButtonRelease	mlx/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_Expose	mlx/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyPress	mlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyRelease	mlx/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_MotionNotify	mlx/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_event	mlx/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v	typeref:typename:int (* ([]))()
mlx_int_param_generic	mlx/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_undef	mlx/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f	typeref:typename:int
mlx_int_parse_xpm	mlx/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_rgb_conversion	mlx/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_set_win_event_mask	mlx/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_static_line	mlx/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_str_str	mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	mlx/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_to_wordtab	mlx/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_wait_first_expose	mlx/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f	typeref:typename:int
mlx_int_xpm_f_image	mlx/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f	typeref:typename:void *
mlx_int_xpm_set_pixel	mlx/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:int
mlx_key_hook	mlx/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_loop	mlx/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_end	mlx/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_hook	mlx/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_get_pos	mlx/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f	typeref:typename:int
mlx_mouse_hide	mlx/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_hook	mlx/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_move	mlx/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f	typeref:typename:int
mlx_mouse_show	mlx/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_new_image	mlx/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_image2	mlx/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_window	mlx/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f	typeref:typename:void *
mlx_pixel_put	mlx/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_put_image_to_window	mlx/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f	typeref:typename:int
mlx_set_font	mlx/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f	typeref:typename:void
mlx_string_put	mlx/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_xpm_file_to_image	mlx/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	mlx/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	mlx/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	mlx/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
mouse_hook	mlx/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
mouse_param	mlx/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list	typeref:typename:void *
mouse_win1	mlx/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win2	mlx/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win3	mlx/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f	typeref:typename:int
move	src/key_hook/key_hook.c	/^void	move(t_data *data, int dir)$/;"	f	typeref:typename:void
my_pixel_put	src/print/my_pixel_put.c	/^void	my_pixel_put(int x, int y, t_data *data, int color)$/;"	f	typeref:typename:void
name	mlx/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name	typeref:typename:char *
name	mlx/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col	typeref:typename:int
ncpy	lib/libft/ft_split.c	/^void	ncpy(char *dest, const char *src, int n)$/;"	f	typeref:typename:void
next	lib/libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	mlx/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list *
no	includes/cub3d.h	/^	t_img	no;$/;"	m	struct:s_data	typeref:typename:t_img
open_map	src/parsing/map_reader.c	/^char	*open_map(char *map_file)$/;"	f	typeref:typename:char *
param	mlx/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list	typeref:typename:void *
parse	src/parsing/parse.c	/^bool	parse(char *map_file, t_data *data)$/;"	f	typeref:typename:bool
parse_args	mlx/configure	/^parse_args(){$/;"	f
path	includes/cub3d.h	/^	char	*path;$/;"	m	struct:s_img	typeref:typename:char *
path	includes/cub3d.h	/^	char	*path;$/;"	m	struct:s_sprite	typeref:typename:char *
pix	mlx/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img	typeref:typename:Pixmap
player	includes/cub3d.h	/^	t_coo	player;$/;"	m	struct:s_data	typeref:typename:t_coo
player_angle	includes/cub3d.h	/^	float	player_angle;$/;"	m	struct:s_data	typeref:typename:float
prev	includes/cub3d.h	/^	t_coo	prev;$/;"	m	struct:s_ray	typeref:typename:t_coo
print_back	src/print/print_ray.c	/^void	print_back(t_data *data)$/;"	f	typeref:typename:void
print_line_east	src/print/print_face.c	/^void	print_line_east(t_data *data, t_ray ray, float r, float fov)$/;"	f	typeref:typename:void
print_line_north	src/print/print_face.c	/^void	print_line_north(t_data *data, t_ray ray, float r, float fov)$/;"	f	typeref:typename:void
print_line_south	src/print/print_face.c	/^void	print_line_south(t_data *data, t_ray ray, float r, float fov)$/;"	f	typeref:typename:void
print_line_west	src/print/print_face.c	/^void	print_line_west(t_data *data, t_ray ray, float r, float fov)$/;"	f	typeref:typename:void
print_nwse	src/print/print_ray.c	/^void	print_nwse(t_ray ray, t_data *data, float r, float fov)$/;"	f	typeref:typename:void
print_ray	src/print/print_ray.c	/^void	print_ray(t_data *data)$/;"	f	typeref:typename:void
private_cmap	mlx/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar	typeref:typename:int
pshm_format	mlx/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar	typeref:typename:int
ray	includes/cub3d.h	/^	t_coo	ray;$/;"	m	struct:s_ray	typeref:typename:t_coo
re	Makefile	/^re: fclean todo all$/;"	t
re	lib/Printf/Makefile	/^re : fclean all$/;"	t
re	lib/get_next_line/Makefile	/^re : fclean all$/;"	t
re	lib/libft/Makefile	/^re: clean all$/;"	t
re	mlx/Makefile	/^re	: clean all$/;"	t
re	mlx/test/Makefile.mk	/^re: clean all$/;"	t
root	mlx/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar	typeref:typename:Window
s_col_name	mlx/mlx_int.h	/^struct	s_col_name$/;"	s
s_coo	includes/cub3d.h	/^typedef struct s_coo$/;"	s
s_data	includes/cub3d.h	/^typedef struct s_data$/;"	s
s_event_list	mlx/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_img	includes/cub3d.h	/^typedef struct s_img$/;"	s
s_img	mlx/mlx_int.h	/^typedef struct	s_img$/;"	s
s_list	lib/libft/libft.h	/^typedef struct s_list$/;"	s
s_ray	includes/cub3d.h	/^typedef struct s_ray$/;"	s
s_sprite	includes/cub3d.h	/^typedef struct s_sprite$/;"	s
s_win_list	mlx/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	mlx/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	mlx/mlx_int.h	/^typedef struct	s_xvar$/;"	s
saved_mode	mlx/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v	typeref:typename:RRMode
screen	mlx/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar	typeref:typename:int
shm	mlx/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img	typeref:typename:XShmSegmentInfo
shm_att_pb	mlx/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f	typeref:typename:int
show	mlx/Makefile.mk	/^show:$/;"	t
show	mlx/test/Makefile.mk	/^show:$/;"	t
show_help	mlx/configure	/^show_help(){$/;"	f
sigint_handler	mlx/test/run_tests.sh	/^sigint_handler(){$/;"	f
single_ray	src/print/print_ray.c	/^float	single_ray(t_data *data, t_ray *ray, float fov)$/;"	f	typeref:typename:float
size_line	includes/cub3d.h	/^	int		size_line;$/;"	m	struct:s_img	typeref:typename:int
size_line	mlx/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img	typeref:typename:int
skip_nl	src/parsing/map_reader.c	/^char	*skip_nl(int fd)$/;"	f	typeref:typename:char *
sl1	mlx/test/main.c	/^int	sl1;$/;"	v	typeref:typename:int
sl2	mlx/test/main.c	/^int	sl2;$/;"	v	typeref:typename:int
sl3	mlx/test/main.c	/^int	sl3;$/;"	v	typeref:typename:int
sl4	mlx/test/main.c	/^int	sl4;$/;"	v	typeref:typename:int
so	includes/cub3d.h	/^	t_img	so;$/;"	m	struct:s_data	typeref:typename:t_img
strlcpy_is_not_posix	mlx/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f	typeref:typename:unsigned int
t_coo	includes/cub3d.h	/^}			t_coo;$/;"	t	typeref:struct:s_coo
t_data	includes/cub3d.h	/^}			t_data;$/;"	t	typeref:struct:s_data
t_event_list	mlx/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_img	includes/cub3d.h	/^}			t_img;$/;"	t	typeref:struct:s_img
t_img	mlx/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_list	lib/libft/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_ray	includes/cub3d.h	/^}			t_ray;$/;"	t	typeref:struct:s_ray
t_sprite	includes/cub3d.h	/^}			t_sprite;$/;"	t	typeref:struct:s_sprite
t_win_list	mlx/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	mlx/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	mlx/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
tab_len	src/parsing/fill_data.c	/^int	tab_len(char **map)$/;"	f	typeref:typename:int
test_default_main	mlx/test/run_tests.sh	/^test_default_main(){$/;"	f
todo	Makefile	/^todo: $(OBJDIR) $(NAME)$/;"	t
type	mlx/mlx_int.h	/^	int				type;$/;"	m	struct:s_img	typeref:typename:int
use_xshm	mlx/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar	typeref:typename:int
visual	mlx/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar	typeref:typename:Visual *
we	includes/cub3d.h	/^	t_img	we;$/;"	m	struct:s_data	typeref:typename:t_img
width	includes/cub3d.h	/^	int		width;$/;"	m	struct:s_data	typeref:typename:int
width	mlx/mlx_int.h	/^	int				width;$/;"	m	struct:s_img	typeref:typename:int
win	includes/cub3d.h	/^	void	*win;$/;"	m	struct:s_data	typeref:typename:void *
win1	mlx/test/main.c	/^void	*win1;$/;"	v	typeref:typename:void *
win1	mlx/test/new_win.c	/^void *win1;$/;"	v	typeref:typename:void *
win2	mlx/test/main.c	/^void    *win2;$/;"	v	typeref:typename:void *
win2	mlx/test/new_win.c	/^void *win2;$/;"	v	typeref:typename:void *
win3	mlx/test/main.c	/^void    *win3;$/;"	v	typeref:typename:void *
win_count	mlx/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	typeref:typename:int	file:
win_list	mlx/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar	typeref:typename:t_win_list *
window	mlx/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list	typeref:typename:Window
wm_delete_window	mlx/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar	typeref:typename:Atom
wm_protocols	mlx/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar	typeref:typename:Atom
x	includes/cub3d.h	/^	int		x;$/;"	m	struct:s_coo	typeref:typename:int
xpm1_x	mlx/test/main.c	/^int	xpm1_x;$/;"	v	typeref:typename:int
xpm1_y	mlx/test/main.c	/^int	xpm1_y;$/;"	v	typeref:typename:int
y	includes/cub3d.h	/^	int		y;$/;"	m	struct:s_coo	typeref:typename:int
